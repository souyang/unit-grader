
[project]
name = "unit-grader"
version = "1.0.2"
description = "Unit Conversion Grader a command-line interface (CLI) program that allows you to convert among units of measurement and grade the users response to determine the result."
authors = [
    {name = "simon ouyang", email = "simonouyang@gmail.com"},
]
dependencies = [
    "typer>=0.9.0",
    "numpy>=1.26.1",
    "rich>=13.6.0",
    "tomli>=2.0.1",
    "typing>=3.7.4.3",
]
requires-python = ">=3.9,<3.13"
readme = "README.md"
license = {file= "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]

[project.scripts]
unit-grader = "unit_grader.cli:app"

[tool.pdm.scripts]
lint = "python3 -m ruff check ."
format = "python3 -m ruff format ."
test = "python3 -m pytest --cov=src/unit_grader ./tests --cov-fail-under=100 --no-cov-on-fail"
doc = {shell = "sphinx-apidoc -f -o docs src && sphinx-build -W docs docs/_build"}
all = {composite = ["format", "lint", "test", "doc"]}

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.4.3",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
]
lint = [
    "ruff>=0.1.5",
]
build = [
    "pdm>=2.10.1",
    "setuptools>=68.2.2",
    "wheel>=0.41.3",
    "twine>=4.0.2",
]
doc = [
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "ghp-import>=2.1.0",
]
dev = [
    "pre-commit>=3.5.0",
    "codespell>=2.2.6",
    "bump2version>=1.0.1",
]

[tool.codespell]
skip = "./htmlcov/*,./docs/*,./.git,./.pdm,./.pytest_cache,./.vscode,./.github,./.gitignore,./.gitattributes,./.gitmodules,./.pre-commit-config.yaml,pdm.lock"

[tool.bump2version]
current_version = "1.0.2"
commit = true
tag = true

[tool.coverage.run]
omit = [".*", "*/site-packages/*", "*conf.py"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
