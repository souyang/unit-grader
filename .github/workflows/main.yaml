name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - bug/fix-release-pipeline
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.9"]
        os: ["ubuntu-latest"]
        # python-version: ["3.9", "3.10", "3.11", "3.12"]
        # os: ["windows-latest", "ubuntu-latest", "macos-latest"]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: true
        cache-dependency-path: '**/pdm.lock'
  
    - name: Install dependencies
      run: pdm sync

    - name: Run Tests
      run: pdm run test

    - name: Lint Code
      run: pdm run lint

    - name: Format Code
      run: pdm run format

    - name: Spell Check
      run: pdm run spell
  
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/bug/fix-release-pipeline'
    steps:
      - name: Bot Defaults
        uses: devlooped/actions-bot@v1.0.1
        with:
          github-token: ${{ secrets.SOUYANG_GITHUB_TOKEN }}
    
      - name: Bump Patch Version
        run: ./bump_version.sh
                     
      # - name: Create Release
      #   run: .github/scripts/create_release.sh
  
  build_deploy_docs:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Build API Documentation
        run: pdm run doc

      - name: Deploy to Netlify
        id: netlify
        uses: nwtgck/actions-netlify@v1
        with:
          production-branch: "main"
          publish-dir: "./docs/_build/html"
          deploy-message: "Deploy from GitHub Actions"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-pull-request-comment: true
          enable-commit-comment: false
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Print Notice
        uses: actions/github-script@v6
        env:
          NETLIFY_URL: ${{ steps.netlify.outputs.deploy-url }}
        with:
          script: |
            const {NETLIFY_URL} = process.env
            core.notice(`Published to: ${NETLIFY_URL}`)
