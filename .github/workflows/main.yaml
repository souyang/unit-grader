name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/version-update
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.9"]
        os: ["ubuntu-latest"]
        # os: ["windows-latest", "ubuntu-latest", "macos-latest"]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: true
        cache-dependency-path: '**/pdm.lock'
  
    - name: Install dependencies
      run: pdm sync

    - name: Run Tests
      run: pdm run test

    - name: Lint Code
      run: pdm run lint

    - name: Format Code
      run: pdm run format

    - name: Spell Check
      run: pdm run spell
  
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/feature/version-update'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # - name: Extract branch name
      #   if: github.event_name != 'pull_request'
      #   shell: bash
      #   run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract_branch

      # # extract branch name on pull request
      # - name: Print branch name
      #   if: github.event_name == 'pull_request'
      #   run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_HEAD_REF})"

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.9"
          cache: true
          cache-dependency-path: '**/pdm.lock'

      - name: Install dependencies
        run: pdm sync
      - name: Bump Patch Version
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          CURRENT_VERSION = $(awk -F '"' '/^version/{print $2}' "pyproject.toml")
          pdm bumpversion --current-version $CURRENT_VERSION patch pyproject.toml --tag --commit --message $'{new_version} Release\n\n[skip ci]' --verbose;
      - name: Commit version change to main - Push
          # Skip CI tag is import below otherwise it would trigger continuous version bumps
        run: |
          git commit -am "[skip ci]Automated version bump" 
          git push
      # - name: Create Release
      #   run: |
      #     pdm publish --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} 


